from bot import *
selected_member = None

class MyModal(Modal):
    def __init__(self, *args, **kwargs) -> None:
        super().__init__(
            InputText(
                label="–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä—É–º—ã"
            ),
            title="–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä—É–º—ã",
            *args,
            **kwargs,
        )

    async def callback(self, interaction: discord.Interaction):
        value = self.children[0].value
        return value



class ButtonView(View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(emoji="üö´", row=0, custom_id="block_button")
    async def block_button(self, button: discord.ui.Button, interaction: discord.Interaction):
        try:
            channel = interaction.user.voice.channel
            if channel:
                if interaction.user.id != get_channel_owner(channel.id):
                    await interaction.response.send_message(embed=discord.Embed(description=
                                                                                "–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞."
                                                                                ), ephemeral=True,
                                                            delete_after=3)
                    return
                users = channel.members
                options = [discord.SelectOption(label=user.display_name, value=str(user.id)) for user in users]
                mban = members_with_ban()
                users = [channel.guild.get_member(mem) for mem in mban]
                options += [discord.SelectOption(label=user.display_name, value=str(user.id)) for user in users]
                select = Select(
                    placeholder="–ö–æ–≥–æ –≤ –ë–∞–Ω/–°–Ω—è—Ç—å –ë–∞–Ω:",
                    options=options
                )

                async def select_callback(interaction: discord.Interaction):
                    try:
                        selected_user_id = int(interaction.data["values"][0])
                        selected_user = channel.guild.get_member(selected_user_id)
                        if selected_user is not None:
                            if selected_user.id != get_channel_owner(channel.id):

                                is_ban = not is_member_ban(channel.id, selected_user_id)
                                update_member_ban(channel.id, selected_user_id, is_ban)
                                if is_ban:
                                    await channel.set_permissions(selected_user, overwrite=discord.PermissionOverwrite(send_messages=True, connect=True, speak=True))
                                    try:
                                        await selected_user.move_to(None)
                                    except:
                                        print("FF")
                                else:
                                    await channel.set_permissions(selected_user, overwrite=discord.PermissionOverwrite(send_messages=False, connect=False, speak=False))
                                    try:
                                        await selected_user.move_to(None)
                                    except:
                                        print("FF")
                                await interaction.response.send_message(embed=discord.Embed(
                                    description=f"{selected_user.mention} {' —Å–Ω—è—Ç –ë–∞–Ω' if is_ban else ' –≤ –ë–∞–Ω–µ'}"),
                                                                        ephemeral=True, delete_after=3)
                            else:
                                await interaction.response.send_message(embed=discord.Embed(description=
                                                                                            "–í—ã —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞."
                                                                                            ), ephemeral=True,
                                                                        delete_after=3)
                        else:
                            await interaction.response.send_message(
                                f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {selected_user.mention} –Ω–µ –Ω–∞–π–¥–µ–Ω.",
                                ephemeral=True,
                                delete_after=3)
                    except:
                        await interaction.followup.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {selected_user.mention} –Ω–µ –Ω–∞–π–¥–µ–Ω.\n"
                                                        f"–ò–ª–∏ –≤ –∫–∞–Ω–∞–ª–µ –±–æ–ª—å—à–µ 25 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
                                                        ephemeral=True, delete_after=3)

                select.callback = select_callback
                view = View()
                view.add_item(select)
                await interaction.response.send_message(view=view, ephemeral=True, delete_after=5)
        except:
            await interaction.response.send_message(embed=discord.Embed(description=
                "–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É."),
                ephemeral=True, delete_after=3)

    @discord.ui.button(label="\u200B \u200B \u200B", row=0, custom_id="block_1", disabled=True)
    async def block_1(self, button: discord.ui.Button, interaction: discord.Interaction):
        print("ewq")

    @discord.ui.button(emoji="‚ûï", row=0, custom_id="limit_button")
    async def limit_button(self, button: discord.ui.Button, interaction: discord.Interaction):
        try:
            channel = interaction.user.voice.channel
            if channel:
                if interaction.user.id != get_channel_owner(channel.id):
                    await interaction.response.send_message(embed=discord.Embed(description=
                                                                                "–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞."
                                                                                ),
                                                            ephemeral=True, delete_after=3)
                    return
                modal = Modal(
                    InputText(
                        label='–ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–π –ª–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:',
                        placeholder='–î–æ–ø—É—Å—Ç–∏–º—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω: 0-99 (0 - –ë–µ–∑–ª–∏–º–∏—Ç)'
                    ),
                    title="–ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–π –ª–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"
                )
                async def modal_callback(interaction: discord.Interaction):
                    try:
                        limit = int(modal.children[0].value)
                        await interaction.response.defer()
                        await asyncio.sleep(0)
                        if 0 <= limit <= 99:
                            # –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ user_limit –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                            update_channel_limit(channel.id, limit)

                            # –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ user_limit –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ Discord
                            await channel.edit(user_limit=limit)

                            await interaction.followup.send(embed=discord.Embed(description=
                                                                                f"–Ω–æ–≤—ã–π –ª–∏–º–∏—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {limit}"
                                                                                ),
                                                            ephemeral=True, delete_after=3)
                        else:
                            await interaction.followup.send(embed=discord.Embed(description=
                                                                                '–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞. –î–æ–ø—É—Å—Ç–∏–º—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω: 0-99.'
                                                                                ),
                                                            ephemeral=True, delete_after=3)
                    except ValueError:
                        await interaction.followup.send(embed=discord.Embed(description=
                                                                            '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 99.'
                                                                            ),
                                                        ephemeral=True, delete_after=3)
                modal.callback = modal_callback
                await interaction.response.send_modal(modal)
        except:
            await interaction.response.send_message(embed=discord.Embed(description=
                "–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É."),
                ephemeral=True, delete_after=3)

    @discord.ui.button(label="\u200B \u200B \u200B", row=0, custom_id="block_2", disabled=True)
    async def block_2(self, button: discord.ui.Button, interaction: discord.Interaction):
        print("ewq")

    @discord.ui.button(emoji="üîí", row=0, custom_id="close_button")
    async def close_button(self, button: discord.ui.Button, interaction: discord.Interaction):
        try:
            channel = interaction.user.voice.channel
            if channel:
                if interaction.user.id != get_channel_owner(channel.id):
                    await interaction.response.send_message(embed=discord.Embed(description=
                                                                                "–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞."
                                                                                ),
                                                            ephemeral=True, delete_after=3)
                    return
                is_open = not is_channel_open(channel.id)
                update_channel_open(channel.id, is_open)
                if is_open:
                    await channel.set_permissions(channel.guild.default_role, connect=True)
                else:
                    await channel.set_permissions(channel.guild.default_role, connect=False)
                await interaction.response.send_message(embed=discord.Embed(description=
                                                                            f"–ö–æ–º–Ω–∞—Ç–∞ {'–æ—Ç–∫—Ä—ã—Ç–∞' if is_open else '–∑–∞–∫—Ä—ã—Ç–∞'}"
                                                                            ),
                                                        ephemeral=True, delete_after=3)
        except:
            await interaction.response.send_message(embed=discord.Embed(description=
                "–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É."),
                ephemeral=True, delete_after=3)

    @discord.ui.button(emoji="‚úçÔ∏è", row=1, custom_id="rename_button")
    async def rename_button(self, button: discord.ui.Button, interaction: discord.Interaction):
        try:
            channel = interaction.user.voice.channel
            if channel:
                if interaction.user.id != get_channel_owner(channel.id):
                    await interaction.response.send_message(embed=discord.Embed(description=
                                                                                "–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞."
                                                                                ),
                                                            ephemeral=True, delete_after=3)
                    return
                modal = Modal(
                    InputText(
                        label="–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä—É–º—ã",
                        placeholder='—Ä—É–º—ã –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å –±–µ–∑ –æ—à–∏–±–æ–∫ 1 —Ä–∞–∑ –≤ 5 –º–∏–Ω—É—Ç'
                    ),
                    title="–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä—É–º—ã"
                )

                async def modal_callback(interaction: discord.Interaction):
                    new_name = modal.children[0].value
                    await interaction.response.defer()
                    await interaction.followup.send(embed=discord.Embed(
                        description=f"{interaction.user.mention}, –∏–º—è –∫–æ–º–Ω–∞—Ç—ã –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: {new_name}"),
                        ephemeral=True, delete_after=3)
                    await channel.edit(name=new_name)

                modal.callback = modal_callback
                await interaction.response.send_modal(modal)
        except Exception as e:
            print("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:", e)
            await interaction.response.send_message(embed=discord.Embed(description=
                                                                        "–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É."),
                                                    ephemeral=True, delete_after=3)

    @discord.ui.button(label="\u200B \u200B \u200B", row=1, custom_id="block_3", disabled=True)
    async def block_3(self, button: discord.ui.Button, interaction: discord.Interaction):
        print("ewq")

    @discord.ui.button(emoji="üèå", row=1, custom_id="kick_button")
    async def kick_button(self, button: discord.ui.Button, interaction: discord.Interaction):
        try:
            channel = interaction.user.voice.channel
            if channel:
                if interaction.user.id != get_channel_owner(channel.id):
                    await interaction.response.send_message(embed=discord.Embed(description=
                                                                                "–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞."
                                                                                ), ephemeral=True,
                                                            delete_after=3)
                    return
                users = channel.members
                options = [discord.SelectOption(label=user.display_name, value=str(user.id)) for user in users]
                select = Select(
                    placeholder="–ö–æ–≥–æ –∫–∏–∫–Ω—É—Ç—å:",
                    options=options
                )
                async def select_callback(interaction: discord.Interaction):
                    try:
                        selected_user_id = int(interaction.data["values"][0])
                        selected_user = channel.guild.get_member(selected_user_id)
                        if selected_user is not None:
                            if selected_user.id != get_channel_owner(channel.id):
                                await selected_user.move_to(None)
                                await interaction.response.send_message(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {selected_user.mention} –±—ã–ª –∫–∏–∫–Ω—É—Ç.",
                                                                        ephemeral=True,
                                                                        delete_after=3)
                            else:
                                await interaction.response.send_message(embed=discord.Embed(description=
                                                                                            "–í—ã —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞."
                                                                                            ), ephemeral=True,
                                                                        delete_after=3)
                        else:
                            await interaction.response.send_message(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {selected_user.mention} –Ω–µ –Ω–∞–π–¥–µ–Ω.",
                                                                    ephemeral=True,
                                                                    delete_after=3)
                    except:
                        await interaction.followup.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {selected_user.mention} –Ω–µ –Ω–∞–π–¥–µ–Ω.\n"
                                                        f"–ò–ª–∏ –≤ –∫–∞–Ω–∞–ª–µ –±–æ–ª—å—à–µ 25 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
                                                        ephemeral=True, delete_after=3)
                select.callback = select_callback
                view = View()
                view.add_item(select)
                await interaction.response.send_message(view=view, ephemeral=True, delete_after=5)
        except:
            await interaction.response.send_message(embed=discord.Embed(description=
                "–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É."),
                ephemeral=True, delete_after=3)

    @discord.ui.button(label="\u200B", row=1, custom_id="block_4", disabled=True)
    async def block_4(self, button: discord.ui.Button, interaction: discord.Interaction):
        print("ewq")

    @discord.ui.button(emoji="üîá", row=1, custom_id="mute_button")
    async def mute_button(self, button: discord.ui.Button, interaction: discord.Interaction):
        try:
            channel = interaction.user.voice.channel
            if channel:
                afkid = channel.guild.get_channel(afk_id)
                if interaction.user.id != get_channel_owner(channel.id):
                    await interaction.response.send_message(embed=discord.Embed(description=
                                                                                "–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞."
                                                                                ), ephemeral=True,
                                                            delete_after=3)
                    return
                users = channel.members
                options = [discord.SelectOption(label=user.display_name, value=str(user.id)) for user in users]
                mmute = members_with_mute()
                users = [channel.guild.get_member(mem) for mem in mmute]
                options += [discord.SelectOption(label=user.display_name, value=str(user.id)) for user in users if not user.voice or user.voice.channel != channel]
                select = Select(
                    placeholder="–ö–æ–≥–æ –≤ –º—É—Ç/—Å–Ω—è—Ç—å –º—É—Ç:",
                    options=options
                )

                async def select_callback(interaction: discord.Interaction):
                    try:
                        selected_user_id = int(interaction.data["values"][0])
                        selected_user = channel.guild.get_member(selected_user_id)
                        if selected_user is not None:
                            if selected_user.id != get_channel_owner(channel.id):

                                is_mute = not is_member_mute(channel.id, selected_user_id)
                                update_member_mute(channel.id, selected_user_id, is_mute)
                                await interaction.response.send_message(embed=discord.Embed(
                                    description=f"{selected_user.mention} {' —Å–Ω—è—Ç –º—É—Ç' if is_mute else ' –≤ –º—É—Ç–µ'}"),
                                    ephemeral=True, delete_after=3)
                                if is_mute:
                                    await channel.set_permissions(selected_user, overwrite=discord.PermissionOverwrite(send_messages=True, connect=True, speak=True))
                                    try:
                                        await selected_user.move_to(afkid)
                                        await selected_user.move_to(channel)
                                    except:
                                        print("FF")
                                else:
                                    await channel.set_permissions(selected_user, overwrite=discord.PermissionOverwrite(send_messages=False, connect=True, speak=False))
                                    try:
                                        await selected_user.move_to(afkid)
                                        await selected_user.move_to(channel)
                                    except:
                                        print("FF")
                            else:
                                await interaction.response.send_message(embed=discord.Embed(description=
                                                                                            "–í—ã —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞."
                                                                                            ), ephemeral=True,
                                                                        delete_after=3)
                        else:
                            await interaction.response.send_message(
                                f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {selected_user.mention} –Ω–µ –Ω–∞–π–¥–µ–Ω.",
                                ephemeral=True,
                                delete_after=3)
                    except:
                        await interaction.followup.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {selected_user.mention} –Ω–µ –Ω–∞–π–¥–µ–Ω.\n"
                                                        f"–ò–ª–∏ –≤ –∫–∞–Ω–∞–ª–µ –±–æ–ª—å—à–µ 25 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
                                                        ephemeral=True, delete_after=3)

                select.callback = select_callback
                view = View()
                view.add_item(select)
                await interaction.response.send_message(view=view, ephemeral=True, delete_after=5)
        except Exception as e:
            print("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:", e)
            await interaction.response.send_message(embed=discord.Embed(description=
                "–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É."),
                ephemeral=True, delete_after=3)


class ButtonCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @check_category()
    @commands.command()
    async def ewq(self, ctx):
        view = ButtonView()
        embed = discord.Embed(title="**–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –†—É–º–∞–º–∏**", colour=0xFF0000)
        embed.set_author(name="–¢–ò–ú–ê –î–û–õ–ë–æ–ï–ë–û–í!",
                         icon_url="https://cdn.discordapp.com/avatars/924881929877217280/15ba66a5e22515fd468608d581da5118.png?size=1024")
        embed.add_field(name="",
                        value="üö´ ‚Äî –ë–∞–Ω/–†–∞–∑–±–∞–Ω —É—á–∞—Å—Ç–Ω–∏–∫–∞\n"
                              "‚ûï ‚Äî –ó–∞–¥–∞—Ç—å –ª–∏–º–∏—Ç —á–µ–ª–∏–∫–æ–≤\n"
                              "üîí ‚Äî –ó–∞–∫—Ä—ã—Ç—å/–æ—Ç–∫—Ä—ã—Ç—å —Ä—É–º—É\n", inline=True)
        embed.add_field(name="",
                        value="‚úçÔ∏è ‚Äî –ó–∞–¥–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ\n"
                              "üèå ‚Äî –ö–∏–∫–Ω—É—Ç—å –∏–∑ —Ä—É–º—ã\n"
                              "üîá ‚Äî –ú—É—Ç/–ê–Ω–º—É—Ç —á–µ–ª–∞\n", inline=True)

        await ctx.send(embed=embed, view=view)

    @commands.Cog.listener()
    async def on_button_click(self, interaction: discord.Interaction):
        view = ButtonView()
        await view.interaction_check(interaction)

def setup(bot):
    bot.add_cog(ButtonCog(bot))
